<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="/popup.css">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <select name="" id="selectBox">
        <option>1시 버스</option>
        <option>2시 버스</option>
        <option>3시 버스</option>
    </select>
    <div id="content">
    </div>
</body>
<script src="/popup.js"></script>
<script>
    const socket = io.connect();
    socket.on("reRender", (data) => {
        if (data.index !== selectIndex) 
            return;
        const { selectIndex: { y, x } } = data;
        const target = document.querySelector(`div[data-y="${y}"][data-x="${x}"]`);
        target.classList.remove("enable");
        target.classList.add("disable");
        target.onclick = null;
        target.style = "";
    })

    const popup = new Popup("예매 하시겠습니까?");

    const handlerClickBtn02 = () => {
        console.log("취소버튼");
    } 

    const handlerClickSeat = (e) => {
        popup.open();
        const y = e.target.getAttribute("data-y");
        const x = e.target.getAttribute("data-x");
        const handlerClickBtn01 = () => {
            socket.emit("reverse", { selectIndex: { y, x }, index: selectIndex });
        }
        popup.addEventListener(handlerClickBtn01, handlerClickBtn02);
    }

    const renderSeats = async (index) => {  
        content.innerHTML = "";  
        const { data } = await axios.get(`/seats/${index}`);
        console.table(data);
        data.forEach((line, indexY) => {
            let lineElement = document.createElement("div");
            lineElement.classList.add("line");
            line.forEach((e, indexX) => {
                let seatElement = document.createElement("div");
                seatElement.classList.add("seat");
                seatElement.setAttribute("data-y", indexY);
                seatElement.setAttribute("data-x", indexX);
                if (e === 1) {
                    seatElement.classList.add("enable");
                    seatElement.style.cursor = "pointer";
                    seatElement.onclick = (e) => { handlerClickSeat(e) };
                }
                else if (e === 2) {
                    seatElement.classList.add("disable");
                }
                lineElement.append(seatElement);
            })
            content.append(lineElement);
        })
    }
    let selectIndex = 0;
    selectBox.onchange = function () {
        selectIndex = this.selectedIndex;
        renderSeats(selectIndex);
    }
    renderSeats(0);
</script>
</html>